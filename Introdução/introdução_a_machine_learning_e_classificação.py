# -*- coding: utf-8 -*-
"""Alura - Introdução a Machine Learning e Classificação.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TZiYH13Ev401YrvXCO_s0Inuc3rlwt1M
"""

#features (1 - Sim e 2 - Não)
#pelo longo?
#perna longa?
#late?

#classes
porco1 = [0,1,0]
porco2 = [0,1,1]
porco3 = [1,1,0]

cachorro1 = [0,1,1]
cachorro2 = [1,0,1]
cachorro3 = [1,1,1]

#1 porco e 0 cachorro
#conjunto de features ou dados
treino_x = [porco1, porco2, porco3,cachorro1, cachorro2, cachorro3]
#determinando as classesm
treino_y = [1,1,1,0,0,0] #labels

from sklearn.svm import LinearSVC
#aprendizado supervisionado
modelo = LinearSVC()
#aprendendo
modelo.fit(treino_x, treino_y)

animalMisterioso = [1,1,1]
#predizendo
modelo.predict([animalMisterioso])

#brincando com o modelo
misterio1=[1,1,1]
misterio2=[1,1,0]
misterio3=[0,1,1]

teste_x = [misterio1, misterio2, misterio3]
teste_y = [0,1,1]
previsoes = modelo.predict(teste_x)



#Primeiro método de acurácia
corretos = (previsoes == teste_y).sum()
total = len(teste_x)
taxa_de_acertos = corretos/total
print("Taxa de acerto", taxa_de_acertos*100)

#Segundo Método de acurácia
from sklearn.metrics import accuracy_score
taxa_de_acertos = accuracy_score(teste_y, previsoes)
print("Taxa de acertos", taxa_de_acertos*100)

